import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
class Student
{
    private String studentId;
    private String name;
    private int age;
    private String major;
    public Student(String studentId,String name, int age, String major)
    {
        this.studentId = studentId;
        this.name = name;
        this.age=age;
        this.major=major;
    }
    public String getStudentId()
    {
        return studentId;
    }
    public void setName(String name)
    {
        this.name=name;
    }
    public void setAge(int age)
    {
        this.age=age;
    }
    public void setMajor (String major)
    {
        this.major=major; 
    }
    @Override
    public String toString()
    {
        return "ID: "+studentId+", Name: "+name+", Age: "+age +", Major: "+major;
    }
}

class StudentManager 
{
    private Map<String, Student> students=new HashMap<>();
    private Scanner scanner = new Scanner(System.in);
    public void addStudent()
    {
        System.out.print("Enter Student ID: ");
        String studentId= scanner.nextLine();
        if (students.containsKey(studentId))
        {
            System.out.println("Student with this ID already exists.");
            return;
        }
        System.out.print("Enter Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter Age: ");
        int age=Integer.parseInt(scanner.nextLine());
        System.out.print("Enter Major: ");
        String major = scanner.nextLine();
        students.put(studentId, new Student(studentId, name, age, major));
        System.out.println("Student added successfully!");
    }
    public void updateStudent()
    {
        System.out.print("Enter Student ID to update: ");
        String studentId=scanner.nextLine();
        Student student = students.get(studentId);
        if (student == null)
        {
            System.out.println("Student not found.");
            return;
        }
        System.out.print("Enter new Name (leave blank to keep current): ");
        String name = scanner.nextLine();
        System.out.print("Enter new Age (leave blank to keep current): ");
        String ageStr = scanner.nextLine();
        System.out.print("Enter new Major (leave blank to keep current): ");
        String major = scanner.nextLine();
        if (!name.isEmpty())
        {
            student.setName(name);
        }
        if (!ageStr.isEmpty())
        {
            student.setAge(Integer.parseInt(ageStr));
        }
        if (!major.isEmpty())
        {
            student.setMajor(major);
        }
        System.out.println("Student updated successfully!");
    }
    public void displayStudents()
    {
        if (students.isEmpty())
        {
            System.out.println("No students to display.");
            return;
        }
        for (Student student:students.values())
        {
            System.out.println(student);
        }
    }
}

public class StudentManagementSystem extends StudentManager
{
    public static void main(String[] args)
    {
        StudentManager manager = new StudentManager();
        Scanner scanner = new Scanner(System.in);
        while (true)
        {
            System.out.println("\nStudent Management System");
            System.out.println("1. Add Student");
            System.out.println("2. Update Student");
            System.out.println("3.Display All Students");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            String choice =scanner.nextLine();
            switch (choice)
            {
                case "1":
                    manager.addStudent();
                    break;
                case "2":
                    manager.updateStudent();
                    break;
                case "3":
                    manager.displayStudents();
                    break;
                case "4":
                    System.out.println("Exiting...");
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println("Invalid choice, please try again.");
            }
        }
    }
}
